#include<stdio.h>
#include<windows.h>
#include<stdlib.h>
#include<conio.h>


void goto_xy(int x, int y)
{
	HANDLE hOut;
	hOut=GetStdHandle(STD_OUTPUT_HANDLE);
	COORD pos={x,y};
	SetConsoleCursorPosition(hOut,pos);	
}


int map[16][45]={
	1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,//0
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//1
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//2
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//3
	0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//4
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//5
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//6
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//7
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//8
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//9
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//10
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//11
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//12
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//13
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,//14
	1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1//15
  //0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4
  //                    1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4
};


int DingWei_bird()//定位鸟
{
	int i;
	for(i=1;i<=15;i++)
	{
		if(map[i][2]==2)break;
	}
	return (i);
} 

void Hua_map()//画地图 
{
	int i,j;
	for(i=0;i<16;i++)
	{
		for(j=0;j<45;j++)
		{
			switch (map[i][j])//浏览数组，将每个元素的值对应的图案输出出来 
			{
			case 0:printf("  ");break;
			case 1:printf("■");break;
			case 2:printf("★");break;
			}	
		}
		printf("\n");
	}
}

int YiDong_map(int Wall)//随机生成有洞的墙壁 移动地图 
{
	int i,j;
	
	if(Wall%15==0)//随机生成有洞的墙壁 
	{
		int Dong;
		Dong=rand()%7;
		for(i=1;i<15;i++)
		{
			if(Dong<i && i<Dong+7)
			{
				map[i][43]=0;
			}
			else 
			{
				map[i][43]=1;
			}
		}
	}
	
	
	for(i=1;i<15;i++)//移动地图 
	{
		for(j=1;j<44;j++)
		{
			int t;
			if(map[i][j]==2||map[i][j+1]==2||map[i][j-1]==2)continue;
			if(j==0)
			{
				map[i][j]=0; 
			}
			map[i][j-1]=map[i][j];
			map[i][j]=map[i][j+1];
		}
	}	
}

int bird_Down()//鸟下降 
{
	int i,Lost;
	i=DingWei_bird();
	map[i][2]=0;
	if(map[i+1][2]==1)
	{
		return 0;
	}
	map[i+1][2]=2;
}

int bird_Up()//鸟上升 
{
	int i,Lost;
	i=DingWei_bird();
	map[i][2]=0;
	if(map[i-1][2]==1)
	{
		return 0;
	}
	map[i-2][2]=2;
}

int bird_ZhuangQiang()//撞墙判定 
{
	int i,j,Lost;
	i=DingWei_bird();
	if(map[i][j+1]==1 || map[i-1][j]==1) 
	{
		return 0;
	}
	return 1;
}

int JiaFen(int FenShu)
{
	int i;
	for(i=1;i<15;i++)
	{
		if(map[i][1]==1)
		{
			FenShu++;
			break;
		}
	}
	return (FenShu);
}

int main()
{
	system("mode con cols=90 lines=20");
	system("title flapy bird");
	int YiDong_map(int x);
	int Lost=1;
	int Wall=0;
	int FenShu=0;
	while(Lost)
	{
		goto_xy(0,0);
		Hua_map();
		Wall++;
		YiDong_map(Wall);
		printf("目前得分%d",FenShu);
		//Lost=bird_ZhuangQiang();//撞墙判断 

		if(_kbhit())//检测键盘是否有输入 
		{
			char key=_getch();  
			if(key==' ')
			{
				Lost=bird_Up();
			}
		}
		
		
		if(Wall%2==0)//自动下落 
		{
			Lost=bird_Down();
		}
		
		FenShu=JiaFen(FenShu);
		Sleep(100);
	}
	
	printf("你失败了"); 
	
	
	return 0;	
} 


